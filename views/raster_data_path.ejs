<!DOCTYPE html>
<html>
<script type="text/javascript" src="/rgbcolor.js"></script> 
<script type="text/javascript" src="/StackBlur.js"></script>
<script type="text/javascript" src="/canvg.js"></script> 
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css"> 
<head>
  <title><%= title %></title>
  <link rel='stylesheet' href='/stylesheets/style.css' />
</head>
<body>
  <% include templates/header.ejs %>

  <div class="container">
    <div class="page-header">
      <h2><%= title %></h2>
    </div>
    <div class="jumbotron">
      <p>Membership: <%= membership %></p>
      <p>Naive total time: <%= naiveTime %> minutes</p>
      <p>Naive total cost: $<%= naiveCost %></p>
      <p id="rasterlength"></p>
      <p id="time"></p>
      <p id="cost"></p>
      <canvas id="canvas"></canvas> 
    </div>
    
    <script type="text/javascript">
      var ML = {};
      window.onload = function() {
        var canvas = document.getElementById('canvas');
        var ACCELERATION_TIME_CONSTANT = 0.00275; //Extra time taken per pass to deccelerate and accelerate motor; in minutes
        var rasterLength = 0;
        var imageFileName = "<%= filename %>";
        var fileType = imageFileName.substring(imageFileName.lastIndexOf(".") + 1);

        canvg('canvas', imageFileName, { renderCallback: function () {
          var ctx = canvas.getContext('2d');
          var verticalDistance = 0;
          ML.width = canvas.width;
          ML.height = canvas.height;
          ML.data = ctx.getImageData(0, 0, ML.width, ML.height).data;
          ctx.strokeStyle = 'rgba(0,0,0,0.6)';
          ctx.lineWidth = 1;
          for(var y = 0; y < ML.height; y++){
            var leftMostPixel = ML.width - 1;
            var rightMostPixel = 0;
            for(var x = 0; x < ML.width; x++){
              if(isColoured(x, y)){
                leftMostPixel = Math.min(x, leftMostPixel);
                rightMostPixel = Math.max(x, rightMostPixel);
              }
            }
            if (rightMostPixel > leftMostPixel){
              rasterLength += rightMostPixel - leftMostPixel + 1; //rasterLength currently in pixels
              ctx.moveTo(leftMostPixel,y);
              ctx.lineTo(rightMostPixel,y);
              verticalDistance++;
            }
          }
          ctx.stroke();
          rasterLength = (rasterLength / 90) * (<%= resolution %> / 90); //90 is for 90ppi; resolution / 90 is the resolution multiplication factor. Each pass of raster is not necessarily a pixel.
          document.getElementById("rasterlength").innerHTML = 'Optimized raster length: ' + rasterLength.toFixed(2) + ' inches';
          var time = rasterLength / <%= speed %> / 60; // 60 is conversion from inches/second to inches/minute
          time += ((verticalDistance / 90) * <%= resolution %>) * ACCELERATION_TIME_CONSTANT; //90 is for 90ppi;
          document.getElementById("time").innerHTML = 'Actual time: ' + time.toFixed(2) + ' minutes';
          document.getElementById("verticalDistance").innerHTML = 'Vertical distance: ' + verticalDistance + ' pixels';
          var cost = time * <%= rate %>;
          if (cost > 15){
            document.getElementById("cost").innerHTML = 'Actual cost: $' + cost.toFixed(2);
          }
          else{
            document.getElementById("cost").innerHTML = 'Actual cost: $15'; //15 dollar minimum fee
          }
        }});   
}

function isColoured(x, y){
  var offset = y * 4 * ML.width + x * 4;
  var red = ML.data[offset];
  var green = ML.data[offset + 1];
  var blue = ML.data[offset + 2];
  var alpha = ML.data[offset + 3];
  if((red === 255 && green === 255 && blue === 255) || alpha === 0){
    return false;
  }
  else{
    return true;
  }
}
</script>
</body>
</html>
